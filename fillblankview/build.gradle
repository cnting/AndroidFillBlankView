apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
//apply plugin: 'com.novoda.bintray-release'
//apply plugin: "guru.stefma.bintrayrelease"
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "androidx.core:core-ktx:1.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

///////使用StefMa/bintray-release
//version = "0.0.1"
//group = "com.cnting"
//androidArtifact { // 2
//    artifactId = "fillblankview"
//}
//publish {
//    userOrg = 'cnting77'
//    desc = 'android fill blank view'
//    website = 'https://github.com/cnting/AndroidFillBlankView'
//}

////////使用bintray-release
//publish {
//    repoName="maven"//仓库名
//    userOrg = 'cnting77'      //bintray注册的用户名
//    groupId = 'com.cnting'         //compile引用时的第1部分groupId
//    artifactId = 'fillblankview'     //compile引用时的第2部分项目名
//    publishVersion = '0.0.1'    //compile引用时的第3部分版本号
//    desc = 'android fill blank view '//d项目描述
//    website = 'https://github.com/cnting/AndroidFillBlankView' //github 托管地址
//}

////////使用bintray插件
def siteUrl = 'https://github.com/cnting/AndroidFillBlankView'   // 项目的主页
def gitUrl = 'https://github.com/cnting/AndroidFillBlankView.git'   // Git仓库的url
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
version = "0.0.1" //发布版本号
group = "com.cnting" //最终引用形式，如compile 'com.piano.demolib:1.0.0'，其中demolib在后面配置

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'maven'//自己创建的仓库名字
        name = 'FillBlankView'//上传到JCenter的名字,最终引用的名字 compile 'com.piano.demolib:1.0.0'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']//不能随便写，只能是仓库创建时选择的license type
        userOrg = 'cnting77' //自己创建的organization名称，一定要全是小写字母，即使当时创建的名称含有大写，这里全部转换为小写，否则404
        publish = true // 是否是公开项目，公开别人可以引用
        version {
            name = '0.0.1'
            desc = 'android fill blank view'//描述，自己定义
            released  = new Date()
            vcsTag = 'v0.0.1'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'FillBlankView'
                description 'fill blank view'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'Apache-2.0' //和之前自己定义的协议一致
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        id 'cnting'        //填写bintray或者github的用户名
                        name 'cnting'         //姓名
                        email 'cnting77@gmail.com'//邮箱
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false //必须添加以免出错
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
javadoc {
    options{
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}


